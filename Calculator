
/**
 * title: 사칙연산 계산기 만들기
 * 
 * @started 2024.10.09
 * @end 
 * 
 * <ul>
 *   <li>2024.10.09: 텍스트 영역 생성과 버튼 생성</li>
 *   <li>2024.10.10: 버튼 클릭 시 텍스트 영역에 생성</li>
 *   <li>2024.10.12: 수식 계산하는 메소드</li>
 *   <li>2024.10.15: 수식 계산하는 메소드2  --> 오류</li>
 *   <li>2024.10.17: 버튼 수정 및 중위,후위 표현식 메소드 추가</li>
 *   
 * </ul>
 */

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

public class Calculator extends JFrame {
    
    JTextArea area; // 변수 선언
    ArrayList<String> tokens = new ArrayList<String>(); //입력된 수식 저장할 리스트

    Calculator() {
        setTitle("계산기");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setSize(300, 370); //프레임 크기 

        showNorth();
        showCenter();

        setVisible(true); // 프레임을 보이게 함
    }

    void showNorth() {
        area = new JTextArea(4, 23); // 텍스트 영역 크기
        area.setEditable(false); // 편집 불가
        add(area, BorderLayout.NORTH);
    }

    void showCenter() {
        JPanel panel = new JPanel();
        panel.setLayout(new GridLayout(5, 4, 10, 10));

        String[] buttons = {
        	"C", " %", "/", "Back",
            "7", "8", "9", "*",
            "4", "5", "6", "+",
            "1", "2", "3", "-",
            " ", "0", ".", "="
        };

        for (String text : buttons) {
            JButton button = new JButton(text);
            button.addActionListener(new ButtonClickListener()); // 클릭 이벤트 추가
            panel.add(button);
        }

        add(panel, BorderLayout.CENTER);
    }

    private class ButtonClickListener implements ActionListener {
        public void actionPerformed(ActionEvent e) {
            String command = e.getActionCommand(); // 어떤 버튼 눌렸는지
            
            // C가 눌렸을 때  
            if (command.equals("C")) {
                area.setText("");
                tokens.clear();
            }
            //Back이 눌렸을때
            else if(command.equals("Back")) {
            	String currentText=area.getText();
            	if (!currentText.isEmpty()) {
            		area.setText(currentText.substring(0,currentText.length()-1)); //마지막 문자 제거
            	}
            }
            //%가 눌렸을때
            else if (command.equals("%")){
            	String currentText = area.getText();
                if (!currentText.isEmpty()) {
                    double currentValue = Double.parseDouble(currentText);
                    area.setText(Double.toString(currentValue / 100)); // 현재 숫자의 1%를 계산
                }
            }
            // =가 눌렸을 때
            else if (command.equals("=")) {
                String result = Double.toString(calculate(area.getText())); // 메소드 호출  
                area.setText(result);    
                tokens.clear();
            }
            // 이외 버튼 눌렸을 때
            else {
                area.setText(area.getText() + e.getActionCommand()); // 클릭한 버튼 추가
            }
        }

        private double calculate(String text) { // 수식 계산하는 메소드
            tokens.clear();
            fullTextParsing(text); // 수식 메소드 호출
            ArrayList<String> postfix = infixToPostfix(tokens); // 중위 표현식을 후위 표현식으로 변환
            return evaluatePostfix(postfix);//후위 표현식
        }
        
        /**
         * @chatgpt: 중위,후위 표현식으로 변환
         *    -->ArrayList<String> postfix = infixToPostfix(tokens);
         */

		private void fullTextParsing(String text) { // 수식 메소드
            
            }

        }
		
        private ArrayList<String> infixToPostfix(ArrayList<String> tokens) { //중위표현식
			// TODO Auto-generated method stub
			return null;
		}
        
        private double evaluatePostfix(ArrayList<String> postfix) { //후위 표현식
            
            return 0;
        }

    public static void main(String[] args) {
        new Calculator();
    }
}
